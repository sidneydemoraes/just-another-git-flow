#!/usr/bin/env bash

### Setting constants
MAIN_BRANCH='master'
STAGE_BRANCH='stage'
FEATURE_PREFIX='feature/'

### Functions
is_git_available() {
  git --version 2>&1 >/dev/null
  return [[ $? -eq 0 ]]
}

is_git_repository() {
  git rev-parse 2>&1 >/dev/null
  return [[ $? -eq 0 ]]
}

is_branch_existent() {
  git rev-parse --verify --quiet $1 2>&1 >/dev/null
  return [[ $? -eq 0 ]]
}

get_current_branch() {
  local current_branch=$(git rev-parse --abbrev-ref HEAD)
  echo "$current_branch"
}


### Validating GIT
if [[ ! is_git_available() ]]; then
  echo 'Please install GIT before running this command.'
  exit 1 
fi

if [[ ! is_git_repository() ]]; then
  echo 'This folder is not monitored by a GIT repository.'
  exit 2
fi

if [[ ! is_branch_existent $MAIN_BRANCH ]]; then
  echo 'Do your first commit to master before proceeding with Another-Git-Flow.'
  exit 3
fi


### Commands
case $1 in

  init)
    if [[ -z $2 ]]; then
      echo 'Please provide which feature should be initiated.'
      exit 4
    fi
    local feature_branch="$FEATURE_PREFIX$2"

    if [[ is_branch_existent $feature_branch ]]; then
      echo "Feature already exists."
      exit 5
    fi
    if [[ $MAIN_BRANCH -ne $(get_current_branch) ]]; then
      git checkout master
    fi
    git checkout -b $feature_branch
    echo "Feature $feature_branch initiated."
    exit 0
    ;;

#  delete)
#    local feature_branch=''
#    if [[ -n $2 ]]; then
#      local current_branch=$(get_current_branch)
#      if [[ $current_branch != "$FEATURE_PREFIX"* ]]; then
#        echo "Please provide the feature which should be deleted or checkout to a valid feature branch."
#        exit 6
#      fi
#      feature_branch=$current_branch
#    else
#      feature_branch="$FEATURE_PREFIX$2"
#      if [[ ! is_branch_existent $feature_branch ]]; then
#        echo "Feature $feature_branch does not exist."
#        exit 7
#      fi
#    fi
#    ensure_master_branch
#    git branch -D $feature_branch
#    echo "Feature $feature_branch deleted successfully."
#    exit 0
#    ;;
#
#  stage)
#    

  *)
    echo 'Please provide which subcommand you want to execute with git-feature:'
    echo 'init "feature name"'
    echo 'delete "feature name"'
    exit 99
    ;;  
esac


